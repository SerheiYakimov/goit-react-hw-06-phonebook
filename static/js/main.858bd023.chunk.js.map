{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebook-actions.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/Form/Form.module.css","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","actions","addNewContact","createAction","deleteContact","handleFilter","Form","useState","name","SetName","number","SetNumber","idName","uuid","idNumber","handleChange","e","target","value","resetForm","className","s","form","onSubmit","preventDefault","contact","id","label","htmlFor","input","type","onChange","pattern","title","required","button","PropType","PropsType","func","isRequired","connect","dispatch","Filter","useDispatch","container","string","ContactListItem","list","item","span","onClick","ContactList","findContact","map","PropsTypes","onDeleteContact","state","findContacts","contacts","App","contactsReducer","createReducer","payload","filter","filterReducer","_","persistConfig","key","version","storage","persistedContactsReducer","persistReducer","rootReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loader","document","getElementById"],"mappings":"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","file":"static/js/main.858bd023.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__oISjJ\",\"title\":\"Filter_title__mtLuE\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// import types from './phonebook-types';\n\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addNewContact = createAction('phonebook/add');\nconst deleteContact = createAction('phonebook/delete');\nconst handleFilter = createAction('phonebook/handleFilter');\n\n\n// const addNewContact = (contact) => ({\n//     type: types.ADD,\n//     payload: contact,\n// })\n\n// const deleteContact = (id) => ({\n//     type: types.DELETE,\n//     payload: id,\n// })\n\n// const handleFilter = value => ({\n//     type: types.HANDLE_FILTER,\n//     payload: value,\n// })\n\nconst actions = { addNewContact, deleteContact, handleFilter };\n\nexport default actions;","import { useState } from \"react\";\nimport PropsType from \"prop-types\";\nimport { v4 as uuid } from \"uuid\";\nimport s from \"../Form/Form.module.css\";\nimport { connect } from \"react-redux\";\nimport actions from '../../redux/phonebook/phonebook-actions';\n\nfunction Form(addNewContact) {\n    const [name, SetName] = useState('');\n    const [number, SetNumber] = useState('');\n\n\n    const idName = uuid();\n    const idNumber = uuid();\n    \n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'name':\n                SetName(value);\n                break;\n            case 'number':\n                SetNumber(value);\n                break;\n            default:\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const contact = {\n        name,\n        number,\n        id: uuid(),\n        };\n\n      addNewContact(contact);\n   \n\n        resetForm();\n    }\n\n    const resetForm = () => {\n        SetName('');\n        SetNumber('');\n    }\n\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label} htmlFor={idName}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            id={idName}\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label} htmlFor={idNumber}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            id={idNumber}\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n}\n\nForm.PropType = {\n  onSubmit: PropsType.func.isRequired,\n  onChange: PropsType.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addNewContact: (contact) => dispatch(actions.addNewContact(contact)),\n})\n\nexport default connect(null, mapDispatchToProps)(Form);","import PropsType from \"prop-types\";\nimport s from \"../Filter/Filter.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport actions from \"../../redux/phonebook/phonebook-actions\";\n\nexport function Filter({ value }) {\n  const dispatch = useDispatch();\n  return (\n    <div className={s.container}>\n      <h3 className={s.title}>Find contacts by name:</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={(e) => dispatch(actions.handleFilter(e.target.value))}\n        className={s.input}\n      />\n    </div>\n  );\n}\n\nFilter.PropsType = {\n  value: PropsType.string,\n  onChange: PropsType.func.isRequired,\n};\n","import PropsType from \"prop-types\";\nimport s from \"../ContactListItem/ContactListItem.module.css\";\n// import { connect } from \"react-redux\";\nimport actions from \"../../redux/phonebook/phonebook-actions\";\nimport { useDispatch } from \"react-redux\";\n\nexport function ContactListItem({ id, name, number }) {\n  const dispatch = useDispatch();\n  \n  return (\n    <li className={s.list}>\n      <p className={s.item}>\n        {name}:<span className={s.span}>{number}</span>\n      </p>\n      <button\n        type=\"submit\"\n        onClick={() => dispatch(actions.deleteContact(id))}\n        className={s.button}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.PropsTypes = {\n  id: PropsType.number.isRequired,\n  name: PropsType.string.isRequired,\n  number: PropsType.number.isRequired,\n  onDeleteContact: PropsType.func.isRequired,\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onDeleteContact: (id) => dispatch(actions.deleteContact(id)),\n\n//   }\n// }\n\n// export default connect (null, mapDispatchToProps)(ContactListItem);\n","import PropsType from \"prop-types\";\nimport s from \"../ContactList/ContactList.module.css\";\n// import actions from '../../redux/phonebook/phonebook-actions';\nimport { connect } from \"react-redux\";\nimport { ContactListItem } from \"../ContactListItem/ContactListItem\";\n\nexport function ContactList({ findContact }) {\n  return (\n    <ul className={s.list}>\n      {findContact().map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.PropsType = {\n  id: PropsType.number.isRequired,\n  name: PropsType.string.isRequired,\n  number: PropsType.number.isRequired,\n  onDeleteContact: PropsType.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    findContacts: state.contacts,\n  }\n}\n\nexport default connect(mapStateToProps, null)(ContactList);\n\n\n// const findContact = () => {\n    //     const normalizeFilter = filter.toLowerCase();\n    //     if (filter.length > 0) {\n    //     return contacts.filter((contact) =>\n    //         contact.name.toLowerCase().includes(normalizeFilter)\n    //     );\n    //     } else {\n    //     return contacts;\n    //     }\n    // };\n","\nimport \"./App.css\";\n// import { useState } from \"react\";\n// import { useLS } from './hooks/LS';\nimport Form from \"./components/Form/Form\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport PropsType from \"prop-types\";\n\n\n\nexport default function App() {\n    \n    // const [contacts, setContacts] = useLS('contacts', [\n    //     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    //     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    //     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    //     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    // ]);\n    // const [filter, setFilter] = useState('');\n\n    // const addNewContact = (contact) => {\n    //     if (contacts.find((el) => el.name === contact.name)) {\n    //     alert(`${contact.name} is already in contacts`);\n    //     } else {\n    //         setContacts([...contacts, contact])\n    //     };\n    // };\n\n    // const handleFilter = (e) => {\n    //     setFilter(e.target.value)\n    // };\n\n    // const findContact = () => {\n    //     const normalizeFilter = filter.toLowerCase();\n    //     if (filter.length > 0) {\n    //     return contacts.filter((contact) =>\n    //         contact.name.toLowerCase().includes(normalizeFilter)\n    //     );\n    //     } else {\n    //     return contacts;\n    //     }\n    // };\n    \n//    const deleteContact = (id) => {\n//         setContacts(contacts.filter((el) => el.id !== id));\n//    };\n\n\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <h2 className=\"title\">Phonebook</h2>\n                <Form\n                    // addNewContact={addNewContact}\n                />\n                <div>\n                    <h2 className=\"title\">Contacts</h2>\n                    <Filter\n                        // value={filter} onChange={handleFilter}\n                    />\n                    <ContactList\n                        // findContact={findContact}\n                        // onDeleteContact={deleteContact}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nApp.PropsType = {\n    addNewContact: PropsType.func.isRequired,\n    value: PropsType.string.isRequired,\n    onChange: PropsType.func.isRequired,\n    findContact: PropsType.func.isRequired,\n    onDeleteContact: PropsType.func.isRequired,\n};\n","import { createReducer } from \"@reduxjs/toolkit\";\n\n// import types from './phonebook-types';\n\nconst initialState = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nexport const contactsReducer = createReducer(initialState, {\n  'phonebook/add': (state, { payload }) => [...state, payload],\n  'phonebook/delete': (state, { payload }) =>\nstate.filter(contact => contact.id !== payload),\n});\n\nexport const filterReducer = createReducer('', {\n  'phonebook/handleFilter': (_, { payload }) => payload,\n});\n\n\n// const contactsReducer = (state = initialState, { type, payload }) => {\n//    switch (type) {\n//      case types.ADD:\n//       return [...state, payload];\n     \n     \n//      case types.DELETE:\n//        return state.filter((el) => el.id !== payload.id);\n     \n//      default:\n//        return state;\n//    }\n//  }\n  \n// const filterReducer = (state = '', {type, payload}) => {\n//     switch (type) {\n//       case types.HANDLE_FILTER:\n//         return payload;\n//      default:\n//        return state;\n//    }\n// }\n\n","import { combineReducers } from \"redux\";\nimport { contactsReducer, filterReducer } from \"./phonebook/phonebook-reducer\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n}\n\nconst persistedContactsReducer = persistReducer(persistConfig, contactsReducer);\n\n\nconst rootReducer = combineReducers({\n    contacts: persistedContactsReducer,\n    filter: filterReducer,\n})\n\nexport const store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n})\n\nexport const persistor = persistStore(store);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from './redux/store';\n\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate persistor={persistor} loader={null}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__22wLV\",\"list\":\"ContactListItem_list__W6jNB\",\"item\":\"ContactListItem_item__2THQn\",\"span\":\"ContactListItem_span__3G7oz\"};"],"sourceRoot":""}