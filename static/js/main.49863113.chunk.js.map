{"version":3,"sources":["components/Form/Form.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Form/Form.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","hooks/LS.js","index.js"],"names":["module","exports","Form","addNewContact","useState","name","SetName","number","SetNumber","idName","uuid","idNumber","handleChange","e","target","value","resetForm","className","s","form","onSubmit","preventDefault","contact","id","label","htmlFor","input","type","onChange","pattern","title","required","button","PropType","PropsType","func","isRequired","Filter","container","string","ContactListItem","onDeleteContact","list","item","span","onClick","ContactList","findContact","map","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLS","contacts","setContacts","filter","setFilter","find","el","alert","normalizeFilter","toLowerCase","length","includes","PropsTypes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49863113.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__22wLV\",\"list\":\"ContactListItem_list__W6jNB\",\"item\":\"ContactListItem_item__2THQn\",\"span\":\"ContactListItem_span__3G7oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__oISjJ\",\"title\":\"Filter_title__mtLuE\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","import { useState } from \"react\";\nimport PropsType from \"prop-types\";\nimport { v4 as uuid } from \"uuid\";\nimport s from \"../Form/Form.module.css\";\n\nexport default function Form({addNewContact}) {\n    const [name, SetName] = useState('');\n    const [number, SetNumber] = useState('');\n\n\n    const idName = uuid();\n    const idNumber = uuid();\n    \n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'name':\n                SetName(value);\n                break;\n            case 'number':\n                SetNumber(value);\n                break;\n            default:\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const contact = {\n        name,\n        number,\n        id: uuid(),\n        };\n\n        addNewContact(contact);\n\n        resetForm();\n    }\n\n    const resetForm = () => {\n        SetName('');\n        SetNumber('');\n    }\n\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label} htmlFor={idName}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            id={idName}\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label} htmlFor={idNumber}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            id={idNumber}\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n}\n\nForm.PropType = {\n  onSubmit: PropsType.func.isRequired,\n  onChange: PropsType.func.isRequired,\n};","import PropsType from \"prop-types\";\nimport s from \"../Filter/Filter.module.css\";\n\nexport function Filter({ value, onChange }) {\n  return (\n    <div className={s.container}>\n      <h3 className={s.title}>Find contacts by name:</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </div>\n  );\n}\n\nFilter.PropsType = {\n  value: PropsType.string,\n  onChange: PropsType.func.isRequired,\n};\n","import PropsType from \"prop-types\";\nimport s from \"../ContactListItem/ContactListItem.module.css\";\n\nexport function ContactListItem({ id, name, number, onDeleteContact }) {\n  return (\n    <li className={s.list}>\n      <p className={s.item}>\n        {name}:<span className={s.span}>{number}</span>\n      </p>\n      <button\n        type=\"submit\"\n        onClick={() => onDeleteContact(id)}\n        className={s.button}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.PropsTypes = {\n  id: PropsType.number.isRequired,\n  name: PropsType.string.isRequired,\n  number: PropsType.number.isRequired,\n  onDeleteContact: PropsType.func.isRequired,\n};\n","import PropsType from \"prop-types\";\nimport s from \"../ContactList/ContactList.module.css\";\n\nimport { ContactListItem } from \"../ContactListItem/ContactListItem\";\n\nexport function ContactList({ findContact, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {findContact().map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.PropsType = {\n  id: PropsType.number.isRequired,\n  name: PropsType.string.isRequired,\n  number: PropsType.number.isRequired,\n  onDeleteContact: PropsType.func.isRequired,\n};\n","\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { useLS } from './hooks/LS';\nimport Form from \"./components/Form/Form\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport PropsType from \"prop-types\";\n\n\n\nexport default function App() {\n    \n    const [contacts, setContacts] = useLS('contacts', [\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ]);\n    const [filter, setFilter] = useState('');\n\n    const addNewContact = (contact) => {\n        if (contacts.find((el) => el.name === contact.name)) {\n        alert(`${contact.name} is already in contacts`);\n        } else {\n            setContacts([...contacts, contact])\n        };\n    };\n\n    const handleFilter = (e) => {\n        setFilter(e.target.value)\n    };\n\n    const findContact = () => {\n        const normalizeFilter = filter.toLowerCase();\n        if (filter.length > 0) {\n        return contacts.filter((contact) =>\n            contact.name.toLowerCase().includes(normalizeFilter)\n        );\n        } else {\n        return contacts;\n        }\n    };\n    \n   const deleteContact = (id) => {\n        setContacts(contacts.filter((el) => el.id !== id));\n   };\n\n\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <h2 className=\"title\">Phonebook</h2>\n                <Form addNewContact={addNewContact} />\n                <div>\n                    <h2 className=\"title\">Contacts</h2>\n                    <Filter value={filter} onChange={handleFilter} />\n                    <ContactList\n                        findContact={findContact}\n                        onDeleteContact={deleteContact}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nApp.PropsType = {\n    addNewContact: PropsType.func.isRequired,\n    value: PropsType.string.isRequired,\n    onChange: PropsType.func.isRequired,\n    findContact: PropsType.func.isRequired,\n    onDeleteContact: PropsType.func.isRequired,\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useLS = (key, defaultValue) => {\n    const [state, setState] = useState(() => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue);\n\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state))\n    }, [key, state]);\n\n    return [state, setState];\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}